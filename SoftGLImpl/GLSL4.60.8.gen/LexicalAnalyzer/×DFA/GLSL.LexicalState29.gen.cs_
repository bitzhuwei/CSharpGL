using System;
using bitzhuwei.Compiler;

namespace bitzhuwei.GLSLFormat {
    partial class CompilerGLSL {

#if noTableDFA
        /// <summary>
        /// lexicalState29
        /// <para>CompilerGLSL.Lexical●[4 NFA States]</para>
        /// </summary>
        private static readonly Action<LexicalContext, char, CurrentStateWrap> lexicalState29 =
        static (context, c, wrap) => {
            if (false) { /* for simpler code generation purpose. */ }
            /* user-input condition code */
            /* = */
            else if (/* possible Vt : '<=' */
            /* no possible signal */
            /* single char */
            c == '='/*'\u003D'(61)*/) {
                ExtendToken(context, st.@LeftAngle符Equal符);
                wrap.currentState = lexicalState70;
            }
            /* user-input condition code */
            /* \< */
            else if (/* possible Vt : '<<' '<<=' */
            /* no possible signal */
            /* single char */
            c == '<'/*'\u003C'(60)*/) {
                ExtendToken(context, st.@LeftAngle符LeftAngle符);
                wrap.currentState = lexicalState71;
            }
            /* deal with everything else. */
            else {
                AcceptToken(st.@LeftAngle符, context);
                wrap.currentState = lexicalState0;
            }


        };
#endif

    }
}

