
using CSharpGL;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using System.Xml.Linq;

namespace demos.glGuide7code {

    /*
    *  polys.c
    *  This program demonstrates polygon stippling.
    */
    public unsafe class polys : _glGuide7code {

        public polys(Form mainForm, int width, int height, GL gl)
            : base(mainForm, width, height, gl) { }

        public override void init(CSharpGL.GL gl) {
            gl.glClearColor(0.0f, 0.0f, 0.0f, 0.0f);
            gl.glShadeModel(GL.GL_FLAT);
        }
        static GLubyte[] fly = {
       0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
       0x03, 0x80, 0x01, 0xC0, 0x06, 0xC0, 0x03, 0x60,
       0x04, 0x60, 0x06, 0x20, 0x04, 0x30, 0x0C, 0x20,
       0x04, 0x18, 0x18, 0x20, 0x04, 0x0C, 0x30, 0x20,
       0x04, 0x06, 0x60, 0x20, 0x44, 0x03, 0xC0, 0x22,
       0x44, 0x01, 0x80, 0x22, 0x44, 0x01, 0x80, 0x22,
       0x44, 0x01, 0x80, 0x22, 0x44, 0x01, 0x80, 0x22,
       0x44, 0x01, 0x80, 0x22, 0x44, 0x01, 0x80, 0x22,
       0x66, 0x01, 0x80, 0x66, 0x33, 0x01, 0x80, 0xCC,
       0x19, 0x81, 0x81, 0x98, 0x0C, 0xC1, 0x83, 0x30,
       0x07, 0xe1, 0x87, 0xe0, 0x03, 0x3f, 0xfc, 0xc0,
       0x03, 0x31, 0x8c, 0xc0, 0x03, 0x33, 0xcc, 0xc0,
       0x06, 0x64, 0x26, 0x60, 0x0c, 0xcc, 0x33, 0x30,
       0x18, 0xcc, 0x33, 0x18, 0x10, 0xc4, 0x23, 0x08,
       0x10, 0x63, 0xC6, 0x08, 0x10, 0x30, 0x0c, 0x08,
       0x10, 0x18, 0x18, 0x08, 0x10, 0x00, 0x00, 0x08 };

        static GLubyte[] halftone = {
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
       0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55 };
        public override void display(CSharpGL.GL gl) {
            gl.glClear(GL.GL_COLOR_BUFFER_BIT | GL.GL_DEPTH_BUFFER_BIT);
            gl.glColor3f(1.0f, 1.0f, 1.0f);

            /*  draw one solid, unstippled rectangle,	*/
            /*  then two stippled rectangles		*/
            gl.glRectf(25.0f, 25.0f, 125.0f, 125.0f);
            gl.glEnable(GL.GL_POLYGON_STIPPLE);
            gl.glPolygonStipple(fly);
            gl.glRectf(125.0f, 25.0f, 225.0f, 125.0f);
            gl.glPolygonStipple(halftone);
            gl.glRectf(225.0f, 25.0f, 325.0f, 125.0f);
            gl.glDisable(GL.GL_POLYGON_STIPPLE);

            gl.glFlush();
        }

        public override void reshape(CSharpGL.GL gl, int w, int h) {
            gl.glViewport(0, 0, (GLsizei)w, (GLsizei)h);
            gl.glMatrixMode(GL.GL_PROJECTION);
            gl.glLoadIdentity();
            //gl.gluOrtho2D(0.0f, (GLdouble)w, 0.0f, (GLdouble)h);
            glu.Ortho2D(0.0f, w, 0.0f, h);
        }

        public override void mouse(MouseButtons button, MouseState state, int x, int y) {
        }

        public override void keyboard(CSharpGL.GL gl, Keys key, int x, int y) {
            switch (key) {
            case Keys.Escape:// 27:
            //exit(0);
            this.mainForm.Close();
            break;
            }
        }


        public override Keys[] ValidKeys => [];
        public override MouseButtons[] ValidButtons => [];

    }
}